//-----------------------------------------------------------------------
// FILE    : ApplicationIC.scala
// SUBJECT : This object represents imports of the nesC part of the application.
// AUTHOR  : (C) Copyright 2013 by Peter C. Chapin <PChapin@vtc.vsc.edu>
//
//-----------------------------------------------------------------------
package edu.uvm.snowstorm.sensorbox

import edu.uvm.scalaness.{ProgramComponentWrapper, MininessComponent, ModuleType, NamedProgramComponent, Parser}
import edu.uvm.mininess.Declarations
import java.io.File

// The Scalaness representation of the nesC Library's imports.
@ModuleType("""{}
               <;>
               { set( new_value: PointerTo[ commandTAG { mote_id     : UInt8,
                                                         command_name: UInt8,
                                                         val         : UInt16,
                                                         nonce       : UInt8 } ] ): Void,
                 get( ): PointerTo[ commandTAG { mote_id     : UInt8,
                                                 command_name: UInt8,
                                                 val         : UInt16,
                                                 nonce       : UInt8 } ],
                 receive(buffer: Array[UInt8]): Void; }""")
object ApplicationIC extends MininessComponent {
  /////////
  // Code generated by the Scalaness compiler.
  /////////
  val configuration =
    new ProgramComponentWrapper(new NamedProgramComponent(
      name            = "ApplicationIC", // TODO: Extract from AST.
      enclosingObject = this,
      typeParameters  = Set(),           // TODO: Obtain from class MetaType parameters.
      valueParameters = Set(),           // TODO: Obtain from class value parameters.
      imports         = Set("set", "get", "receive"),
      exports         = Set(),
      abstractSyntax  = null), "generated" + File.separator + "SensorBox")
    
  def getTypeMap  = Map()
  def getValueMap = Map()
  ////////
  // END of Scalaness generated code.
  //////// 

  external("SensorBox/ApplicationIC.nc")
}
